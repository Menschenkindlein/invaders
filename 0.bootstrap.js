(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/invaders.js":
/*!**************************!*\
  !*** ../pkg/invaders.js ***!
  \**************************/
/*! exports provided: __wbg_random_86efc8986c8a8805, Render, Game, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_86efc8986c8a8805\", function() { return __wbg_random_86efc8986c8a8805; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Render\", function() { return Render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Game\", function() { return Game; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _invaders_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invaders_bg */ \"../pkg/invaders_bg.wasm\");\n/* tslint:disable */\n\n\nconst __wbg_random_86efc8986c8a8805_target = Math.random.bind(Math) || function() {\n    throw new Error(`wasm-bindgen: Math.random.bind(Math) does not exist`);\n};\n\nfunction __wbg_random_86efc8986c8a8805() {\n    return __wbg_random_86efc8986c8a8805_target();\n}\n\nfunction freeRender(ptr) {\n\n    _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_render_free\"](ptr);\n}\n/**\n*/\nclass Render {\n\n    static __construct(ptr) {\n        return new Render(ptr);\n    }\n\n    constructor(ptr) {\n        this.ptr = ptr;\n\n    }\n\n    /**\n    * @returns {number}\n    */\n    get render_ptr() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_render_render_ptr\"](this.ptr);\n    }\n    set render_ptr(arg0) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_render_render_ptr\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get invaders_count() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_render_invaders_count\"](this.ptr);\n    }\n    set invaders_count(arg0) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_render_invaders_count\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get projectiles_count() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_render_projectiles_count\"](this.ptr);\n    }\n    set projectiles_count(arg0) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_render_projectiles_count\"](this.ptr, arg0);\n    }\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeRender(ptr);\n    }\n}\n\nfunction freeGame(ptr) {\n\n    _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_game_free\"](ptr);\n}\n/**\n*/\nclass Game {\n\n    static __construct(ptr) {\n        return new Game(ptr);\n    }\n\n    constructor(ptr) {\n        this.ptr = ptr;\n\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeGame(ptr);\n    }\n    /**\n    * @returns {Game}\n    */\n    static new() {\n        return Game.__construct(_invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"game_new\"]());\n    }\n    /**\n    * @returns {void}\n    */\n    update_invaders() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"game_update_invaders\"](this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    add_invader() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"game_add_invader\"](this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    update_projectiles() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"game_update_projectiles\"](this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    collide() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"game_collide\"](this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    fire() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"game_fire\"](this.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n    update_tank(arg0, arg1) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"game_update_tank\"](this.ptr, arg0, arg1);\n    }\n    /**\n    * @returns {boolean}\n    */\n    is_over() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return (_invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"game_is_over\"](this.ptr)) !== 0;\n    }\n    /**\n    * @returns {Render}\n    */\n    render() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return Render.__construct(_invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"game_render\"](this.ptr));\n    }\n}\n\nlet cachedDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n\n\n//# sourceURL=webpack:///../pkg/invaders.js?");

/***/ }),

/***/ "../pkg/invaders_bg.wasm":
/*!*******************************!*\
  !*** ../pkg/invaders_bg.wasm ***!
  \*******************************/
/*! exports provided: memory, __indirect_function_table, __heap_base, __data_end, __wbg_game_free, __wbg_render_free, __wbg_get_render_render_ptr, __wbg_set_render_render_ptr, __wbg_get_render_invaders_count, __wbg_set_render_invaders_count, __wbg_get_render_projectiles_count, __wbg_set_render_projectiles_count, game_new, game_update_invaders, game_add_invader, game_update_projectiles, game_collide, game_fire, game_update_tank, game_is_over, game_render */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./invaders */ \"../pkg/invaders.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/invaders_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var invaders_invaders_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! invaders/invaders_bg */ \"../pkg/invaders_bg.wasm\");\n/* harmony import */ var invaders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! invaders */ \"../pkg/invaders.js\");\n\n\n\n\nvar game = invaders__WEBPACK_IMPORTED_MODULE_1__[\"Game\"].new();\nconst canvas = document.getElementById(\"canvas\");\ncanvas.height = 700 + 140;\ncanvas.width = 700 + 140;\n\nconst ctx = canvas.getContext(\"2d\");\n\nconst drawCar = (x, y) => {\n    ctx.beginPath();\n    ctx.fillStyle = \"#9933FF\";\n    ctx.fillRect(\n        (10 + x - 3) * 7,\n        (10 + y - 3) * 7,\n        6*7,\n        6*7\n    );\n    ctx.stroke();\n};\n\nconst drawInvaders = (array, from, to) => {\n    ctx.beginPath();\n    ctx.fillStyle = \"#FFCCCC\";\n\n    for (let i = from; i < to; i += 2) {\n        ctx.fillRect(\n            (10 + array[i] - 2) * 7,\n            (10 + array[i+1] - 2) * 7,\n            4*7,\n            4*7\n        );\n    }\n    ctx.stroke();\n};\n\nconst drawProjectiles = (array, from, to) => {\n    ctx.beginPath();\n    ctx.fillStyle = \"#FF0000\";\n\n    for (let i = from; i < to; i += 2) {\n        ctx.fillRect(\n            (10 + array[i] - 1) * 7,\n            (10 + array[i+1] - 1) * 7,\n            2*7,\n            2*7\n        );\n    }\n    ctx.stroke();\n};\n\nconst draw = () => {\n    const render = game.render();\n    const render_array = new Uint8Array(\n        invaders_invaders_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer,\n        render.render_ptr,\n        (1 + render.invaders_count + render.projectiles_count) * 2);\n\n    drawCar(render_array[0], render_array[1]);\n    drawInvaders(render_array, 2, (1 + render.invaders_count) * 2);\n    drawProjectiles(\n        render_array,\n        (1 + render.invaders_count) * 2,\n        (1 + render.invaders_count + render.projectiles_count) * 2);\n};\n\nvar toLeft = false;\nvar toRight = false;\nvar toUp = false;\nvar toDown = false;\n\ncanvas.onkeydown = (e) => {\n    if (e.key == \"a\") {\n        toLeft = true;\n    } else if (e.key == \"s\") {\n        toDown = true;\n    } else if (e.key == \"d\") {\n        toRight = true;\n    } else if (e.key == \"w\") {\n        toUp = true;\n    } else if (e.key == \" \") {\n        game.fire(); // direct call of `game` method here <<<<<<\n    }\n};\n\ncanvas.onkeyup = (e) => {\n    if (e.key == \"a\") {\n        toLeft = false;\n    } else if (e.key == \"s\") {\n        toDown = false;\n    } else if (e.key == \"d\") {\n        toRight = false;\n    } else if (e.key == \"w\") {\n        toUp = false;\n    }\n};\n\nvar af = null;\n\ncanvas.onclick = () => {\n    if (af === null) {\n        game = invaders__WEBPACK_IMPORTED_MODULE_1__[\"Game\"].new();\n        af = requestAnimationFrame(renderLoop);\n    }\n};\n\nvar tick = 0;\n\nconst renderLoop = () => {\n    if (tick % 16 == 0) {\n        game.update_invaders();\n    }\n\n    game.update_projectiles();\n\n    game.collide();\n\n    if (tick == 64) {\n        game.add_invader();\n        tick = 0;\n    }\n\n    game.update_tank(\n        toLeft ? -1 : 0 + toRight ? 1 : 0,\n        toDown ? 1 : 0 + toUp ? -1 : 0\n    );\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    draw();\n\n    tick +=1;\n\n    if (game.is_over()) {\n        ctx.beginPath();\n        ctx.fillStyle = \"#FF0000\";\n        ctx.fillRect(50*7, 50*7, 20*7, 20*7);\n        ctx.stroke();\n        af = null;\n    } else {\n        af = requestAnimationFrame(renderLoop);\n    }\n};\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);